unit uIdentificacaoEmpregadorIsento;

interface

uses
  Classes, System.SysUtils;

type
  TdadosIsencao = class
  public
  private
    FideMinLei_27: string;
    FdtProtRenov_32: string;
    FpagDou_34: string;
    FdtEmisCertif_29: string;
    FnrCertif_28: string;
    FnrProtRenov_31: string;
    FdtVencCertif_30: string;
    FdtDou_33: string;
    property ideMinLei_27: string read FideMinLei_27 write FideMinLei_27;
    property nrCertif_28: string read FnrCertif_28 write FnrCertif_28;
    property dtEmisCertif_29: string read FdtEmisCertif_29 write FdtEmisCertif_29;
    property dtVencCertif_30: string read FdtVencCertif_30 write FdtVencCertif_30;
    property nrProtRenov_31: string read FnrProtRenov_31 write FnrProtRenov_31;
    property dtProtRenov_32: string read FdtProtRenov_32 write FdtProtRenov_32;
    property dtDou_33: string read FdtDou_33 write FdtDou_33;
    property pagDou_34: string read FpagDou_34 write FpagDou_34;
    function gerarTX2(): string;
  end;

implementation

{ TdadosIsencao }

function TdadosIsencao.gerarTX2: string;
var
  Lista: TStringList;
begin

  Lista := TStringList.Create;
  Lista.Add('ideMinLei_27=' + ideMinLei_27);
  Lista.Add('nrCertif_28=' + nrCertif_28);
  Lista.Add('dtEmisCertif_29=' + dtEmisCertif_29);
  Lista.Add('dtVencCertif_30=' + dtVencCertif_30);

  if (Trim(nrProtRenov_31) <> EmptyStr) then
    Lista.Add('nrProtRenov_31=' + nrProtRenov_31);

  if (Trim(dtProtRenov_32) <> EmptyStr) then
    Lista.Add('dtProtRenov_32=' + dtProtRenov_32);

  if (Trim(dtDou_33) <> EmptyStr) then
    Lista.Add('dtDou_33=' + dtDou_33);

  if (Trim(pagDou_34) <> EmptyStr) then
    Lista.Add('pagDou_34=' + pagDou_34);

  Result := Lista.Text;
end;

end.

